# ----------------------------------------------------------------------
#         >>> AVChat 3 Red5 Server Side Configuration File <<<
# ----------------------------------------------------------------------

# Requirements
# ------------
# AVChat 3.6 and newer versions are compatible with Red5 1.0.5 version and newer.
# AVChat 3.5.2 and older versions are compatible with Red5 0.8 and Red 1.0 RC1.
# Red5 0.8 does not support H.264 streaming

# Authors
# -------
# Over time various persons worked on the Red5 version of AVChat 3, these
# persons are:
#     * Octavian Naicu
#     * Dragos Stanciu
#     * Remus Negrota (current developer)

# Making Changes
# --------------
# After changing anything in this file, for the changes to take effect, you need to 
# restart Red5. This will ensure Red5 loads the avchat30 application instances
# (_definst_) in its memory with the new modified avchat3.properties file.






# ----------------------------------------------------------------------
#         >>>                  Settings                    <<<
# ----------------------------------------------------------------------


# ----------------------------------------------------------------------
# The revision number of the server side code. The Flash swf
# client files have has a similar revision number. To find out the revision
# number of a Flash client file, right click on it in the desktop browser.

revisionNumber = 3823



# ----------------------------------------------------------------------
# When synchronizeRevisionNumber is set to true, the avchat30 app
# will not accept connections coming from swf client files with revision numbers
# different that the revisionNumber above. This will prevent website visitors
# from connecting with an old/cached version of the AVChat 3 client .swf files
# to the (new) avchat30 app on the Red5 media server. Connecting with an old version  
# of the .swf files to the new media server code might create issues.
# values: true (default) or false

synchronizeRevisionNumber = true


# ----------------------------------------------------------------------
# If you put your license key here, you will not be asked for it in the
# main interface.  You will also not be able to change it from the main
# interface. The key you put here has higher priority than a key
# previously introduced via the admin/user interface. When replacing
# this key make sure you delete this file:
# red5/webapps/avchat30/persistence/SharedObject/_definst_/licensekey.red5

licenseKey=


# ----------------------------------------------------------------------
# The avchat30 app tries to execute writeuserslist.php/writeuserslist.asp
# on the web server in the AVChat installation folder every time:
#     * a user join or leaves the chat or a room
#     * starts/stops his webcam or microphone or makes it public/private
#     * a room is created or modified

# The list of rooms and users in each room is POSTed to the writeuserslist
# script in xml format. 

# See writeUsersListScriptURL for the path to the script.

# If you do not use this feature you can turn it off by setting this 
# setting to false.

writeUsersLists=true



# ----------------------------------------------------------------------
# By default the avchat30 app tries to detect the location of the
# writeuserslist.php script when a user tries to connect through the user
# interface (index.swf) for the 1st time after the media server has been
# started.
# You should hard code this setting when:
#     * you're using writeuserslist.asp (or any other script) instead of
#       writeuserslist.php
#     * you've moved writeuserslist.php to a different folder
#     * you have troubles with writeuserslist.php not executing

writeUsersListScriptURL=



# ----------------------------------------------------------------------
# If set to true, all audio/video streams will be recorded in audio and
# video .flv files on the media server. The video quality can be changed
# by configuring AVChat 3 to use another video quality .xml profile. The
# .flv files can contain only audio, only video or both. The recording
# process is started when there is audio or video data on the stream and
# ends when there is no audio and video data on the stream. All the
# audio video data sent by a user from the time he connects until he
# leaves the chat is recorded in a single file. When the user connects
# again, a new file is created.

# The .flv files can be found in webapps/avchat30/streams/_definst_.

# The audio is encoded with the NellyMoser ASAO or Speex codec depending
# on what audio settings are being used on the client.

# The video is encoded with the Sorenson Spark or H.264 codec depending
# on what video settings are being used on the client.

# Red5 0.8 does not support H.264 streaming.
# Red5 1.0 RC1 will store the audio and video in .flv files regardless 
# of the audio and video codec used.

recordAudioVideoStreams=false



# ----------------------------------------------------------------------
# If set to true all the text chat will be recorded to .txt files on the
# media server in the avchat30/logs folder

loggingEnabled=true


# ----------------------------------------------------------------------
# Set this to true if you want only one person to be able to connect
# from one IP. This feature is not yet implemented.

allowOnePersonPerIp=false



# ----------------------------------------------------------------------
# Whether or not the IP information should be included in the users
# list data which is sent to all the users in the chat. If the IP info is
# included, special RAM viewing programs might be able to see these IPs
# by analysing their computer's RAM memory. We added this option so that
# this sensitive info is never sent to the chat clients.

# When set to false:
#    * showing the IP of each user near the user name in the users list on the client 
#      side will not work. 
#    * the silence feature will not be persistent (when a user leaves and rejoins
#      a room OR when he leaves and re enters the chat completely the user
#      will not be silenced). 

# The IPs shown in the text chat area are not affected by this setting. 

# Also check out the includeIPSInTextChatMessages setting.

includeIPSInUsersListInfo=true



# ----------------------------------------------------------------------
# Whether or not the the IP of each user should be sent with every text
# message.  When the IP is sent, some users, using special Flash hacking
# programs, might be able to see these IPs. If you set this to false you
# might also want to set the includeIPSInUsersListInfo above to false as well.

includeIPSInTextChatMessages=true



# ----------------------------------------------------------------------
# The maximum number of rooms that can be created in an instance. This option has been
# added to protect AVChat 3 against people trying to flood the chat with rooms.

maxRooms=100



# ----------------------------------------------------------------------
# Set to true if you want rooms to be automatically deleted after a certain 
# amount of time. See deleteEmptyInactiveRoomsOlderThan to configure the amount of time.

deleteRoomsWhenTheyBecomeEmpty=false

# ----------------------------------------------------------------------
# This setting controls the maximum number of hours a room can stay
# empty and inactive without being deleted. Only has effect if
# deleteRoomsWhenTheyBecomeEmpty=true. Value is expressed
# in hours. This value can not take fractions at this time. Rooms with ids
# mentioned in the doNotDeleteTheseRoomsWhenTheyBecomeEmpty setting
# are NOT deleted.

deleteEmptyInactiveRoomsOlderThan=24

# ----------------------------------------------------------------------
# When deleteRoomsWhenTheyBecomeEmpty is set to true this array can be used to
# prevent some rooms (like lobbies or main rooms) from being removed.
# Fill this array with the ids of the rooms you do not want deleted like this:
# doNotDeleteTheseRoomsWhenTheyBecomeEmpty=r1,r2;
# The room id's will show up in the admin interface of AVChat 3
# (admin.swf), in the rooms list, in the leftmost column.

doNotDeleteTheseRoomsWhenTheyBecomeEmpty=



# ----------------------------------------------------------------------
# The list of IPs from which admin.swf can connect. Leave it empty to
# allow connections from all IPs. Supports single IPs and IP ranges.
# Leave empty to allow admins to connect from all IPs.

# Example 1, a single IP: 
# adminsAllowedFromTheseIps=85.204.216.25

# Example 2, multiple IPs: 
# adminsAllowedFromTheseIps=85.204.216.25, 127.0.0.1

# Example 3: 2 IPs with one IP range: 
# adminsAllowedFromTheseIps=85.204.216.24, 85.204.216.0-85.204.216.255, 127.0.0.1

adminsAllowedFromTheseIps=



# ----------------------------------------------------------------------
# By default the avchat30 application from the media server does not
# accept connections from swf files hosted on localhost. Knowledgeable
# hackers could host AVChat 3 on their localhost web server and connect
# to your media server. For development we recommend setting it to true.

allowLocalhostConnections=false



# ----------------------------------------------------------------------
# Every X seconds the media server checks for ghost users, use the
# setting below to control how often to check for ghost users. The
# value is in seconds. Set to 0 to disable the disconnection of ghost
# users.

checkForGhostConnectionsEveryXSeconds=10



# ----------------------------------------------------------------------
# When checking for ghost users (every X seconds above) a user is
# considered a ghost if he has not sent a ping message (from the client)
# for more than Y seconds. The client side sends ping messages every 3
# seconds, use a higher value for this setting. The value is in seconds.
# The default value is 10 seconds. If the users browser stops working,
# the user will be disconnected within maximum
# checkForGhostConnectionsEveryXSeconds + ghostUsersAreIdleForYSeconds
# seconds.

ghostUsersAreIdleForYSeconds=10



# ----------------------------------------------------------------------
# The absolute url (including http) for the script that verifies the
# tokens sent by the client against the web server that delivers the
# client. If empty, token authentication is disabled. If you want to
# enable token authentication hard code this value with the absolute path
# to token_verify.php . Relative urls will not work.
# Example:
# tokenUrlLocation=http://avchat.net/videochat/token_verify.php
# Does not work over HTTPS.

tokenUrlLocation=



# ----------------------------------------------------------------------
# This option can be used in countries were dynamic IPs are frequent and
# can not be used reliably to identify admins.

# Only the admin swfs with the filename specified below can connect to the
# media server. If you leave it empty admin swfs can connect no matter
# what their filename is.

# Example:
# adminSwfFileName=custom_admin.swf

adminSwfFileName=



# ----------------------------------------------------------------------
# AVChat allows you to group rooms and users in application instances.
# The default application instance is "_definst_" . To change the
# instance you need to change the last part of the connectionstring in
# avc_settings.xxx. The setting below allows you to create rooms
# automatically when a new instance is created so that rooms
# do not have to be manually created in each instance. When using AVChat 
# as an IM you will use many instances on the fly and you'll need at least
# one room created in each of them.

# To create rooms automatically you need to add ROOM OBJECTS to the
# defaultRooms array below.

# Example:
# defaultRooms=[The Lobby,Main room for everyone,,0,,This is a room created automatically]

#The parameters in order are:

#Room name
#Description
#Password (empty in the example)
#Maximum amount of users allowed in the room (0 in the example allowing for unlimited users)
#Owner name - the name of the room creator (left empty in the example above)
#Room welcoming message


# maxusers:0 means unlimited users. You can use any number greater or
# equal with 0 for the number of users allowed in that room.

# A room name or description or password cannot contain commas

# To create more than 1 default room add another room object to the
# defaultRooms array and separate the room objects with a
# semicolon.

# Example with 2 default rooms: 
# defaultRooms=[The Lobby,Main room for everyone,,0,,This is an automated created room];[Super Room, The description,1234,0,,This is an automated created room]

# For this feature to work seamlessly you might also want to use the
# licenseKey option above, otherwise every time a new
# instance is started the license key will be asked from the 1st user
# that connects to it.

# To disable the automatic creation simply leave the array empty like so: defaultRooms=

defaultRooms=[The Lobby,Main room for everyone,,0,,This is a room created automatically]



# ----------------------------------------------------------------------
# The setting controls whether or not each new user that connects to the
# chat has to have an unique username. By default the setting is set to
# false allowing users with the same username to login. The comparison
# is case sensitive so "Alex" and "aleX" can login if uniqueUserNames=true

uniqueUserNames = true



# ----------------------------------------------------------------------
# By default the avchat30 app tries to detect the location of the
# sendReport.php script when a user tries to connect through the user
# interface (index.swf) for the 1st time after the media server has been
# started or the avchat30 app has been reloaded.

# That location is then used as the value of the setting below.

# You should hard code the setting below when:
#     * you're using sendReport.aspx (or any other script) instead of
#       sendReport.php
#     * you've moved sendReport.php to a different folder
#     * you have troubles with the sendReport.php API not working

#The following variables are sent:
#ip: the IP of the reported user
#siteId: the siteId of the reported user
#username: the username of the reported user
#reason: the reason of the report
#description: additional description for the report (could be empty because it is optional)
#roomId: the id of the room from where the report was sent
#roomName: the name of the room from where the report was sent
#reporter: the name of the user who made the report
#webCamSnapURL: the link to the web-cam snapshot of the reported user taken when the report was sent
#textChatSnapURL: the link to the text-chat snapshot taken when the report was sent

#Variables are sent via POST.

sendReportScriptURL=



# ----------------------------------------------------------------------
#  This setting is used to prevent any malicious users from connecting
#  to the Media Server using a forged avc_settings.xxx file. This setting works 
#  paired with the option 'enableEncryptedSettings' that can be found in 
#  avc_settings.xxx file on the web server in the AVChat installation folder.
#  By default this setting is disabled since the encryption of the avc_settings output is 
#  also disabled on the web sever side. Turning this on will cause the media server to only 
#  accept connections from a client that provides encrypted settings.

allowOnlyEncryptedSettings = false



# ----------------------------------------------------------------------
#  sendRecordingsInfoScriptURL can be used to hard code the URL to which the avchat30 app 
#  should send data about the recorded streams. 

#  Variable that are being sent:
#  streamName: the name of the recorded videostream
#  siteId: the siteId of the user that made the recorded videostream
#  username: the username of the user that made the recorded videostream

# Variables are being sent via POST.

# The script is executed when a stream is starts/stops being broadcast.

#  By default the avchat30 app tries to detect the location of the
#  getRecordedVideosInfo.php script when a user tries to connect through the user
#  interface (index.swf) for the 1st time after the media server has been
#  started or the avchat30 app has been reloaded. That location is then used as the value 
#  of the setting below.

#  You should hard code the setting below when:
#      * you're using getRecordedVideosInfo.aspx (or any other script) instead of
#        getRecordedVideosInfo.php
#      * you've moved getRecordedVideosInfo.php to a different folder
#      * you have troubles with the getRecordedVideosInfo.php API not working

sendRecordingsInfoScriptURL=



# ----------------------------------------------------------------------
# When setting this option to true, the media server will ensure that the only accepted connections are from
#  AVChat clients that are licensed with a trial license key.

allowOnlyTrialLicenseKeys=false